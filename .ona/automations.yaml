tasks:
  # Install dependencies
  # Runs automatically on environment start
  # Can also be triggered manually: gitpod automations task start install-deps
  install-deps:
    name: Install Dependencies
    command: |
      echo "üì¶ Installing dependencies..."
      npm install
      echo "‚úÖ Dependencies installed"
    triggeredBy:
      - postEnvironmentStart
    
  # Wait for Neo4j to be ready
  # Runs automatically on environment start
  # Can also be triggered manually: gitpod automations task start wait-neo4j
  wait-neo4j:
    name: Wait for Neo4j
    command: |
      echo "‚è≥ Waiting for Neo4j to be ready..."
      max_attempts=60
      attempt=0
      
      while [ $attempt -lt $max_attempts ]; do
        if curl -s http://localhost:7474 > /dev/null 2>&1; then
          echo "‚úÖ Neo4j is ready!"
          exit 0
        fi
        attempt=$((attempt + 1))
        echo "Attempt $attempt/$max_attempts - Neo4j not ready yet..."
        sleep 2
      done
      
      echo "‚ùå Neo4j failed to start within timeout"
      exit 1
    triggeredBy:
      - postEnvironmentStart
    
  # Run database migrations
  # Runs automatically on environment start
  # Can also be triggered manually: gitpod automations task start run-migrations
  run-migrations:
    name: Run Database Migrations
    command: |
      echo "‚è≥ Waiting for dependencies..."
      while [ ! -d "node_modules" ]; do
        sleep 1
      done
      
      echo "‚è≥ Waiting for Neo4j..."
      max_attempts=60
      attempt=0
      while [ $attempt -lt $max_attempts ]; do
        if curl -s http://localhost:7474 > /dev/null 2>&1; then
          break
        fi
        attempt=$((attempt + 1))
        sleep 2
      done
      
      echo "üîÑ Running database migrations..."
      npm run migrate:up
      echo "‚úÖ Migrations completed"
    triggeredBy:
      - postEnvironmentStart
  
  # Check migration status (on-demand only)
  # Run manually: gitpod automations task start migration-status
  migration-status:
    name: Check Migration Status
    command: |
      echo "üìä Checking migration status..."
      npm run migrate:status
  
  # Validate migrations (on-demand only)
  # Run manually: gitpod automations task start validate-migrations
  validate-migrations:
    name: Validate Migrations
    command: |
      echo "üîç Validating migrations..."
      npm run migrate:validate
  
  # Seed database with fixture data (on-demand only)
  # Run manually: gitpod automations task start seed-database
  seed-database:
    name: Seed Database with Fixtures
    command: |
      echo "üå± Seeding database with fixture data..."
      npm run seed
      echo "‚úÖ Database seeded successfully"
  
  # Reset database to known state (on-demand only)
  # Run manually: gitpod automations task start reset-database
  reset-database:
    name: Reset Database to Known State
    command: |
      echo "üîÑ Resetting database to known state..."
      echo "‚ö†Ô∏è  This will clear all non-migration data!"
      npm run seed:clear
      echo "‚úÖ Database reset complete"

services:
  # Nuxt development server with hot reload
  nuxt-dev:
    name: Nuxt Dev Server
    description: Nuxt development server with hot module replacement
    commands:
      start: |
        echo "‚è≥ Waiting for dependencies..."
        while [ ! -d "node_modules" ]; do
          sleep 1
        done
        
        echo "üöÄ Starting Nuxt development server..."
        npm run dev
      ready: |
        if curl -s http://localhost:3000/api/health > /dev/null 2>&1; then
          echo "‚úÖ Nuxt dev server is ready"
          exit 0
        else
          echo "‚è≥ Nuxt dev server is not ready yet"
          exit 1
        fi
    triggeredBy:
      - postEnvironmentStart
